<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.group5.dao.ChoiceMapper">
  <resultMap id="BaseResultMap" type="com.group5.entity.Choice">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="age_max" jdbcType="INTEGER" property="ageMax" />
    <result column="age_min" jdbcType="INTEGER" property="ageMin" />
    <result column="salary_max" jdbcType="REAL" property="salaryMax" />
    <result column="salary_min" jdbcType="REAL" property="salaryMin" />
    <result column="height_max" jdbcType="REAL" property="heightMax" />
    <result column="height_min" jdbcType="REAL" property="heightMin" />
    <result column="EDU_id" jdbcType="INTEGER" property="eduId" />
    <result column="Situation" jdbcType="VARCHAR" property="situation" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, age_max, age_min, salary_max, salary_min, height_max, height_min, EDU_id, Situation, 
    user_id
  </sql>
  <select id="selectByExample" parameterType="com.group5.entity.ChoiceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from choice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from choice
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from choice
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.group5.entity.ChoiceExample">
    delete from choice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.group5.entity.Choice">
    insert into choice (id, age_max, age_min, 
      salary_max, salary_min, height_max, 
      height_min, EDU_id, Situation, 
      user_id)
    values (#{id,jdbcType=INTEGER}, #{ageMax,jdbcType=INTEGER}, #{ageMin,jdbcType=INTEGER}, 
      #{salaryMax,jdbcType=REAL}, #{salaryMin,jdbcType=REAL}, #{heightMax,jdbcType=REAL}, 
      #{heightMin,jdbcType=REAL}, #{eduId,jdbcType=INTEGER}, #{situation,jdbcType=VARCHAR}, 
      #{userId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.group5.entity.Choice">
    insert into choice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="ageMax != null">
        age_max,
      </if>
      <if test="ageMin != null">
        age_min,
      </if>
      <if test="salaryMax != null">
        salary_max,
      </if>
      <if test="salaryMin != null">
        salary_min,
      </if>
      <if test="heightMax != null">
        height_max,
      </if>
      <if test="heightMin != null">
        height_min,
      </if>
      <if test="eduId != null">
        EDU_id,
      </if>
      <if test="situation != null">
        Situation,
      </if>
      <if test="userId != null">
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="ageMax != null">
        #{ageMax,jdbcType=INTEGER},
      </if>
      <if test="ageMin != null">
        #{ageMin,jdbcType=INTEGER},
      </if>
      <if test="salaryMax != null">
        #{salaryMax,jdbcType=REAL},
      </if>
      <if test="salaryMin != null">
        #{salaryMin,jdbcType=REAL},
      </if>
      <if test="heightMax != null">
        #{heightMax,jdbcType=REAL},
      </if>
      <if test="heightMin != null">
        #{heightMin,jdbcType=REAL},
      </if>
      <if test="eduId != null">
        #{eduId,jdbcType=INTEGER},
      </if>
      <if test="situation != null">
        #{situation,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.group5.entity.ChoiceExample" resultType="java.lang.Long">
    select count(*) from choice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update choice
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.ageMax != null">
        age_max = #{record.ageMax,jdbcType=INTEGER},
      </if>
      <if test="record.ageMin != null">
        age_min = #{record.ageMin,jdbcType=INTEGER},
      </if>
      <if test="record.salaryMax != null">
        salary_max = #{record.salaryMax,jdbcType=REAL},
      </if>
      <if test="record.salaryMin != null">
        salary_min = #{record.salaryMin,jdbcType=REAL},
      </if>
      <if test="record.heightMax != null">
        height_max = #{record.heightMax,jdbcType=REAL},
      </if>
      <if test="record.heightMin != null">
        height_min = #{record.heightMin,jdbcType=REAL},
      </if>
      <if test="record.eduId != null">
        EDU_id = #{record.eduId,jdbcType=INTEGER},
      </if>
      <if test="record.situation != null">
        Situation = #{record.situation,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update choice
    set id = #{record.id,jdbcType=INTEGER},
      age_max = #{record.ageMax,jdbcType=INTEGER},
      age_min = #{record.ageMin,jdbcType=INTEGER},
      salary_max = #{record.salaryMax,jdbcType=REAL},
      salary_min = #{record.salaryMin,jdbcType=REAL},
      height_max = #{record.heightMax,jdbcType=REAL},
      height_min = #{record.heightMin,jdbcType=REAL},
      EDU_id = #{record.eduId,jdbcType=INTEGER},
      Situation = #{record.situation,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.group5.entity.Choice">
    update choice
    <set>
      <if test="ageMax != null">
        age_max = #{ageMax,jdbcType=INTEGER},
      </if>
      <if test="ageMin != null">
        age_min = #{ageMin,jdbcType=INTEGER},
      </if>
      <if test="salaryMax != null">
        salary_max = #{salaryMax,jdbcType=REAL},
      </if>
      <if test="salaryMin != null">
        salary_min = #{salaryMin,jdbcType=REAL},
      </if>
      <if test="heightMax != null">
        height_max = #{heightMax,jdbcType=REAL},
      </if>
      <if test="heightMin != null">
        height_min = #{heightMin,jdbcType=REAL},
      </if>
      <if test="eduId != null">
        EDU_id = #{eduId,jdbcType=INTEGER},
      </if>
      <if test="situation != null">
        Situation = #{situation,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.group5.entity.Choice">
    update choice
    set age_max = #{ageMax,jdbcType=INTEGER},
      age_min = #{ageMin,jdbcType=INTEGER},
      salary_max = #{salaryMax,jdbcType=REAL},
      salary_min = #{salaryMin,jdbcType=REAL},
      height_max = #{heightMax,jdbcType=REAL},
      height_min = #{heightMin,jdbcType=REAL},
      EDU_id = #{eduId,jdbcType=INTEGER},
      Situation = #{situation,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>


</mapper>